version: "3"
services:
  kamon_postgres:
    image: postgres:15.2
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGREST_ROLE: ${POSTGREST_ROLE}
      POSTGREST_USER: ${POSTGREST_USER}
      POSTGREST_PASSWORD: ${POSTGREST_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./db-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--username=${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  kamon_server:
    build:
      context: ./
      dockerfile: ./docker/webapp/dev/Dockerfile
    volumes:
      - ./core:/app/core
      - ./webapp:/app/webapp
      - /app/core/node_modules
      - /app/webapp/node_modules
      - /app/core/dist
    ports:
      - 80:3000
    depends_on:
      kamon_postgres:
        condition: service_healthy

  kamon_postgrest:
    image: postgrest/postgrest
    ports:
      - "3001:3000"
    environment:
      PGRST_DB_URI: postgres://${POSTGREST_USER}:${POSTGREST_PASSWORD}@kamon_postgres:5432/${POSTGRES_DATABASE}
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3001
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: web_anon
    depends_on:
      kamon_postgres:
        condition: service_healthy

  kamon_postgrest_swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      API_URL: http://localhost:3001
    depends_on:
      - kamon_postgrest

  kamon_admin:
    build:
      context: ./
      dockerfile: ./docker/admin/dev/Dockerfile
    ports:
      - 8080:80
    depends_on:
      - kamon_postgrest

volumes:
  postgres:
